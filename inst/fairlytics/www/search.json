[{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"deviation-chart","dir":"Articles","previous_headings":"","what":"Deviation Chart","title":"Charts Showcase","text":"","code":"test_df <- data.frame(    instrument = c(\"Instrument A\", \"Instrument B\", \"Instrument C\"),    active_weight = c(0.002, -0.001, 0.0003) )  ActiveWeightsDeviationChart(df = test_df,                             instrument_col = \"instrument\",                             active_weight_col = \"active_weight\",                             min_band = -0.0005,                              max_band = 0.0005)"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"asset-allocation-heatmap","dir":"Articles","previous_headings":"","what":"Asset Allocation HeatMap","title":"Charts Showcase","text":"","code":"test_df <- data.frame(   fund = rep(c(\"Fund A\", \"Fund B\", \"Fund C\"), each = 3),   asset_class = rep(c(\"Equity\", \"Fixed Income\", \"Cash\"), 3),   allocation = runif(9, 0, 1)   )  AssetClassAllocationTable(df = test_df,                           x_col = \"fund\",                           y_col = \"asset_class\",                           value_col = \"allocation\",                           chart_title = \"Asset Allocation Heatmap\")"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"portfolio-model-table","dir":"Articles","previous_headings":"","what":"Portfolio Model Table","title":"Charts Showcase","text":"","code":"portfolio_model_df <- data.frame(   account_code = c('abc', 'xyz', 'test0001'),   asset_class = c('Equities', 'Bonds', 'Commodities'),   mkt_value = c(300, 200, 100),   port_wgt = c(0.5, 0.3, 0.2),   model_wgt = c(0.4, 0.4, 0.2),   active_wgt = c(0.1, -0.1, 0.0)   )  PortfolioModelTable(   df = portfolio_model_df,   mkt_value = \"mkt_value\",   port_wgt = \"port_wgt\",   model_wgt = \"model_wgt\",   active_wgt = \"active_wgt\"   )"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"relative-weight-bar","dir":"Articles","previous_headings":"","what":"Relative Weight Bar","title":"Charts Showcase","text":"","code":"relative_df <- data.frame(   instrument = c(\"Instrument A\", \"Instrument B\", \"Instrument C\"),   weight = c(0.1, -0.05, 0.2),   fund_label = c(\"Fund 1\", \"Fund 1\", \"Fund 2\")   )  RelativeWeightBarChart(df = relative_df,                         instrument_col = \"instrument\",                         weight_col = \"weight\",                         fund_label_col = \"fund_label\",                         txt_abv_grph = 0.02)"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"line-charts","dir":"Articles","previous_headings":"","what":"Line Charts","title":"Charts Showcase","text":"line charts fairlytics support two different plotting engines. can use highcharter ggplot2 plotting engine.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"ggplot-line-chart","dir":"Articles","previous_headings":"Line Charts","what":"ggplot Line Chart","title":"Charts Showcase","text":"","code":"library(ggplot2) library(plotly) library(lubridate)  test_data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = runif(10),   ColorGroup = rep(c(\"Red\", \"Blue\"), each = 5),   Group = rep(c(\"A\", \"B\"), each = 5)   )  LineChart(   df = test_data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"ggplot Line Chart\"   )"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"highcharter-line-chart","dir":"Articles","previous_headings":"Line Charts","what":"Highcharter Line Chart","title":"Charts Showcase","text":"","code":"library(highcharter) library(lubridate)  data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = rnorm(10),   Group = rep(c(\"A\", \"B\"), each = 5)   )  LineChartr(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = NULL,   group_col = \"Group\",   chart_title = \"Highcharter Line Chart\"   )"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"line-chart-wrapper","dir":"Articles","previous_headings":"","what":"line chart wrapper","title":"Charts Showcase","text":"LineChartWrapper function can used create line chart can specify plot engine use ggplot2 highcharter.","code":"library(ggplot2) library(plotly) library(highcharter) library(lubridate)  data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = runif(10),   ColorGroup = rep(c(\"Red\", \"Blue\"), each = 5),   Group = rep(c(\"A\", \"B\"), each = 5)   )"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"using-ggplot2","dir":"Articles","previous_headings":"line chart wrapper","what":"using ggplot2","title":"Charts Showcase","text":"","code":"chart_ggplot2 <- LineChartWrapper(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"Interactive Line Chart (ggplot2)\",   plot_engine = \"ggplot2\" )  chart_ggplot2"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"using-highcharter","dir":"Articles","previous_headings":"line chart wrapper","what":"using HighCharter","title":"Charts Showcase","text":"","code":"LineChartWrapper(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"Line Chart Highcharter)\",   plot_engine = \"highcharter\"   )"},{"path":"https://menzy17.github.io/Fairlytics/articles/charts.html","id":"calender-returns-table","dir":"Articles","previous_headings":"","what":"Calender Returns Table","title":"Charts Showcase","text":"","code":"returns_df <- data.frame(   Year = c(2023, 2024),   Jan = c(0.05, 0.04),   Feb = c(0.02, 0.03),   Mar = c(0.02, 0.03),   Apr = c(-0.01, 0.00),   May = c(-0.2, 0.00),   Jun = c(-0.01, 0.00),   Jul = c(-0.01, 0.00),   Aug = c(-0.01, 0.01),   Sep = c(-0.01, 0.00),   Oct = c(-0.01, 0.00),   Nov = c(-0.01, 0.00),   Dec = c(-0.01, 0.00),   YTD = c(0.06, 0.07)   )  CalendarReturnsTable(returns_df)"},{"path":"https://menzy17.github.io/Fairlytics/articles/fairlytics.html","id":"why-use-fairlytics","dir":"Articles","previous_headings":"","what":"Why use fairlytics?","title":"Introduction to fairlytics","text":"fairlytics package built : Enhance Productivity: Reduce time spent repetitive tasks ready--use functions. Ensure Consistency: Maintain uniformity data processing analysis across projects. Promote Collaboration: Provide shared library tools reflect best practices team standards.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/fairlytics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to fairlytics","text":"install begin using fairlytics package, use following commands:","code":"# Uncomment if devtools is not installed # install.packages(\"devtools\") devtools::install_github(\"menzy17/fairlytics\")  # Load the package library(fairlytics)"},{"path":"https://menzy17.github.io/Fairlytics/articles/fairlytics.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Introduction to fairlytics","text":"detailed documentation examples, refer function documentation:","code":"# replace foo with the actual function name ?fairlytics::foo"},{"path":"https://menzy17.github.io/Fairlytics/articles/home.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Welcome to Fairlytics","text":"fairlytics package comprehensive toolkit developed streamline enhance data workflows. Designed team internal use, offers carefully curated collection essential functions cater wide range tasks, including: Data Cleaning: Simplify automate process preparing raw data analysis. Data Manipulation: Effortlessly reshape transform datasets extract meaningful insights. Data Visualization: Create intuitive impactful visualizations communicate key findings effectively. Data Analysis: Leverage robust analytical tools uncover trends drive data-driven decisions.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/home.html","id":"why-use-fairlytics","dir":"Articles","previous_headings":"","what":"Why use fairlytics?","title":"Welcome to Fairlytics","text":"fairlytics package built : Enhance Productivity: Reduce time spent repetitive tasks ready--use functions. Ensure Consistency: Maintain uniformity data processing analysis across projects. Promote Collaboration: Provide shared library tools reflect best practices team standards.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/intro.html","id":"fairlytics","dir":"Articles","previous_headings":"","what":"Fairlytics","title":"Get Started","text":"Quarto enables weave together content executable code finished document. learn Quarto see https://quarto.org.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/intro.html","id":"running-code","dir":"Articles","previous_headings":"","what":"Running Code","title":"Get Started","text":"click Render button document generated includes content output embedded code. can embed code like :","code":"1 + 1 ## [1] 2"},{"path":"https://menzy17.github.io/Fairlytics/articles/window_accordion_doc.html","id":"section-functionality","dir":"Articles","previous_headings":"","what":"Functionality","title":"Interactive Accordion Panel","text":"AccordionPanel function generates collapsible panels, containing bar chart based specified grouping column. particularly useful visualizing grouped data interactive format without requiring full Shiny application.","code":""},{"path":"https://menzy17.github.io/Fairlytics/articles/window_accordion_doc.html","id":"section-example-usage","dir":"Articles","previous_headings":"","what":"Example Usage","title":"Interactive Accordion Panel","text":"following example demonstrates create interactive accordion panel bar charts grouped category:","code":"mydata <- data.frame(   group_value = rep(c(\"Group A\", \"Group B\", \"Group C\"), each = 3),   category = rep(c(\"Category 1\", \"Category 2\", \"Category 3\"), times = 3),   amount = c(10, 20, 15, 25, 35, 30, 40, 50, 45) )  accordion_content <- AccordionPanel(   df = mydata,   value_col = \"amount\",   grouping_col = \"group_value\",   chart_title = \"Collapsible Bar Charts\" )"},{"path":"https://menzy17.github.io/Fairlytics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Menzi Njakazi. Author, maintainer.","code":""},{"path":"https://menzy17.github.io/Fairlytics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Njakazi M (2025). fairlytics: package provides collection Fairtree functions performing data cleaning processing. R package version 1.1.3.0.","code":"@Manual{,   title = {fairlytics: The package provides a collection of Fairtree functions for performing data cleaning and processing},   author = {Menzi Njakazi},   year = {2025},   note = {R package version 1.1.3.0}, }"},{"path":[]},{"path":"https://menzy17.github.io/Fairlytics/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"The package provides a collection of Fairtree functions for performing data cleaning and processing","text":"fairlytics package comprehensive toolkit developed streamline enhance data workflows. Designed team internal use, offers carefully curated collection essential functions cater wide range tasks, including: Data Cleaning: Simplify automate process preparing raw data analysis. Data Manipulation: Effortlessly reshape transform datasets extract meaningful insights. Data Visualization: Create intuitive impactful visualizations communicate key findings effectively. Data Analysis: Leverage robust analytical tools uncover trends drive data-driven decisions.","code":""},{"path":"https://menzy17.github.io/Fairlytics/index.html","id":"why-fairlytics","dir":"","previous_headings":"","what":"Why fairlytics?","title":"The package provides a collection of Fairtree functions for performing data cleaning and processing","text":"fairlytics package built : Enhance Productivity: Reduce time spent repetitive tasks ready--use functions. Ensure Consistency: Maintain uniformity data processing analysis across projects. Promote Collaboration: Provide shared library tools reflect best practices team standards.","code":""},{"path":"https://menzy17.github.io/Fairlytics/index.html","id":"code-guide","dir":"","previous_headings":"","what":"Code Guide","title":"The package provides a collection of Fairtree functions for performing data cleaning and processing","text":"contributing project, please follow code guide Explore documentation learn function use cases. fairlytics package continuously updated incorporate feedback evolving team requirements.","code":""},{"path":"https://menzy17.github.io/Fairlytics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fairlytics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AccordionPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"AccordionPanel — AccordionPanel","title":"AccordionPanel — AccordionPanel","text":"Creates collapsible UI panel displaying grouped bar charts interactive application. panel section collapsible can contain HTML content, making ideal organizing various interactive elements compactly accessibly.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AccordionPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AccordionPanel — AccordionPanel","text":"","code":"AccordionPanel(   df,   value_col,   grouping_col,   chart_title = NULL,   color = \"#FF8200\" )"},{"path":"https://menzy17.github.io/Fairlytics/reference/AccordionPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AccordionPanel — AccordionPanel","text":"df data frame containing data displayed panel. value_col (string) column df contains values displayed chart. grouping_col (string) column used group data fer panel. chart_title (string) optional title chart, displayed top panel. color (hex string) color value (hex format, default \"#FF8200\") define bar chart's fill color.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AccordionPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AccordionPanel — AccordionPanel","text":"HTML element containing collapsible panel grouped bar charts based ggplot2.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AccordionPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AccordionPanel — AccordionPanel","text":"","code":"library(shiny)  # Example data mydata <- data.frame(   group_value = rep(c(\"Group A\", \"Group B\", \"Group C\"), each = 3),   category = rep(c(\"Category 1\", \"Category 2\", \"Category 3\"), times = 3),   amount = c(10, 20, 15, 25, 35, 30, 40, 50, 45) )  AccordionPanel(mydata, value_col = \"amount\", grouping_col = \"group_value\",  chart_title = \"Collapsible Bar Charts\") #> <div class=\"draggable\" id=\"controls\" style=\"top:115px;left:30px;right:40px;bottom:auto;width:90%;height:150%;position:fixed;cursor:move; overflow-y:scroll; max-height: 2500px; opacity: 0.75; z-index: 10000\"> #>   <h6> #>     <strong>Collapsible Bar Charts<\/strong> #>   <\/h6> #>   <div> #>     <button data-toggle=\"collapse\" data-target=\"#box8a002da7-cb17-4bfc-9f86-502f5d3315c1\" class=\"btn btn-info btn-block\">Group A<\/button> #>     <div id=\"box8a002da7-cb17-4bfc-9f86-502f5d3315c1\" class=\"collapse\"> #>       <div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-e252f0f4137d1d0f42b5\" style=\"width:100%;height:400px;\"><\/div> #>       <script type=\"application/json\" data-for=\"htmlwidget-e252f0f4137d1d0f42b5\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5],\"base\":[0,0,0],\"x\":[1,1,1],\"y\":[10,20,15],\"text\":[\"reorder(group_value, -amount): Group A<br />amount: 10\",\"reorder(group_value, -amount): Group A<br />amount: 20\",\"reorder(group_value, -amount): Group A<br />amount: 15\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,130,0,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":29.2835201328352,\"r\":13.283520132835198,\"b\":44.993951387951604,\"l\":29.954337899543386},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,1.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Group A\"],\"tickvals\":[1],\"categoryorder\":\"array\",\"categoryarray\":[\"Group A\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835198},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1,21],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"5\",\"10\",\"15\",\"20\"],\"tickvals\":[0,5,10,15,20],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"5\",\"10\",\"15\",\"20\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"16201d0441a\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"16201d0441a\",\"visdat\":{\"16201d0441a\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}<\/script> #>     <\/div> #>   <\/div> #>   <div> #>     <button data-toggle=\"collapse\" data-target=\"#box6f3843aa-157e-4ccd-8634-cf210f43fa02\" class=\"btn btn-info btn-block\">Group B<\/button> #>     <div id=\"box6f3843aa-157e-4ccd-8634-cf210f43fa02\" class=\"collapse\"> #>       <div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-4b8c195dc34b88dd0295\" style=\"width:100%;height:400px;\"><\/div> #>       <script type=\"application/json\" data-for=\"htmlwidget-4b8c195dc34b88dd0295\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5],\"base\":[0,0,0],\"x\":[1,1,1],\"y\":[25,35,30],\"text\":[\"reorder(group_value, -amount): Group B<br />amount: 25\",\"reorder(group_value, -amount): Group B<br />amount: 35\",\"reorder(group_value, -amount): Group B<br />amount: 30\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,130,0,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":29.2835201328352,\"r\":13.283520132835198,\"b\":44.993951387951604,\"l\":29.954337899543386},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,1.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Group B\"],\"tickvals\":[1],\"categoryorder\":\"array\",\"categoryarray\":[\"Group B\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835198},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.75,36.75],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\"],\"tickvals\":[0,10,20,30],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"162043ba122b\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"162043ba122b\",\"visdat\":{\"162043ba122b\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}<\/script> #>     <\/div> #>   <\/div> #>   <div> #>     <button data-toggle=\"collapse\" data-target=\"#boxdc1cf074-dfc5-4e79-83d9-e0f192bf3716\" class=\"btn btn-info btn-block\">Group C<\/button> #>     <div id=\"boxdc1cf074-dfc5-4e79-83d9-e0f192bf3716\" class=\"collapse\"> #>       <div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-89923338e67900b5ed10\" style=\"width:100%;height:400px;\"><\/div> #>       <script type=\"application/json\" data-for=\"htmlwidget-89923338e67900b5ed10\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5],\"base\":[0,0,0],\"x\":[1,1,1],\"y\":[40,50,45],\"text\":[\"reorder(group_value, -amount): Group C<br />amount: 40\",\"reorder(group_value, -amount): Group C<br />amount: 50\",\"reorder(group_value, -amount): Group C<br />amount: 45\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,130,0,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":29.2835201328352,\"r\":13.283520132835198,\"b\":44.993951387951604,\"l\":29.954337899543386},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,1.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Group C\"],\"tickvals\":[1],\"categoryorder\":\"array\",\"categoryarray\":[\"Group C\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835198},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.5,52.5],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\"],\"tickvals\":[0,10,20,30,40,50],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"1620136966dd\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"1620136966dd\",\"visdat\":{\"1620136966dd\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}<\/script> #>     <\/div> #>   <\/div> #> <\/div> #> <script>$(\".draggable\").draggable({cancel: \".shiny-input-container,.html-widget,input,textarea,button,select,option\"});<\/script>"},{"path":"https://menzy17.github.io/Fairlytics/reference/ActiveWeightsDeviationChart.html","id":null,"dir":"Reference","previous_headings":"","what":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","title":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","text":"Function creates horizontal bar chart (mirrored layout) visualize active weights instruments. chart highlights instruments based active weights adds red dashed horizontal lines specified min_band max_band values reference.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ActiveWeightsDeviationChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","text":"","code":"ActiveWeightsDeviationChart(   df,   instrument_col,   active_weight_col,   min_band = -5e-04,   max_band = 5e-04 )"},{"path":"https://menzy17.github.io/Fairlytics/reference/ActiveWeightsDeviationChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","text":"df data frame containing data plotted. instrument_col (string) specifying column name instruments interest. active_weight_col (string) specifying column name active weights. min_band (numeric) indicating lower reference line y-axis (default: -0.0005). max_band (numeric) indicating upper reference line y-axis (default: 0.0005).","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ActiveWeightsDeviationChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","text":"plotly::ggplotly object representing mirrored bar chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ActiveWeightsDeviationChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ActiveWeightsDeviationChart — ActiveWeightsDeviationChart","text":"","code":"# Example data test_df <- data.frame(   instrument = c(\"Instrument A\", \"Instrument B\", \"Instrument C\"),   active_weight = c(0.002, -0.001, 0.0003) ) ActiveWeightsDeviationChart(test_df, instrument_col = \"instrument\", active_weight_col = \"active_weight\")  {\"x\":{\"data\":[{\"orientation\":\"h\",\"width\":[0.89999999999999991,0.90000000000000036,0.90000000000000013],\"base\":[0,-0.001,0],\"x\":[0.002,0.001,0.00029999999999999997],\"y\":[1,3,2],\"text\":[\"reorder(instrument, -active_weight): Instrument A<br />active_weight: 2e-03\",\"reorder(instrument, -active_weight): Instrument B<br />active_weight: 1e-03\",\"reorder(instrument, -active_weight): Instrument C<br />active_weight: 3e-04\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(73,54,47,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.00050000000000000001,0.00050000000000000001],\"y\":[0.40000000000000002,3.6000000000000001],\"text\":\"yintercept: 5e-04\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.1338582677165354,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-0.00050000000000000001,-0.00050000000000000001],\"y\":[0.40000000000000002,3.6000000000000001],\"text\":\"yintercept: -5e-04\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.1338582677165354,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":23.305936073059364,\"r\":7.3059360730593621,\"b\":37.260273972602747,\"l\":81.09589041095893},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.00115,0.00215],\"tickmode\":\"array\",\"ticktext\":[\"-0.1%\",\"0.0%\",\"0.1%\",\"0.2%\"],\"tickvals\":[-0.001,0,0.001,0.002],\"categoryorder\":\"array\",\"categoryarray\":[\"-0.1%\",\"0.0%\",\"0.1%\",\"0.2%\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Weight\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Instrument A\",\"Instrument C\",\"Instrument B\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Instrument A\",\"Instrument C\",\"Instrument B\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"162064a361c1\":{\"x\":{},\"y\":{},\"type\":\"bar\"},\"16202f24412e\":{\"yintercept\":{}},\"1620541ed\":{\"yintercept\":{}}},\"cur_data\":\"162064a361c1\",\"visdat\":{\"162064a361c1\":[\"function (y) \",\"x\"],\"16202f24412e\":[\"function (y) \",\"x\"],\"1620541ed\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/AssetClassAllocationTable.html","id":null,"dir":"Reference","previous_headings":"","what":"AssetClassAllocationTable — AssetClassAllocationTable","title":"AssetClassAllocationTable — AssetClassAllocationTable","text":"function generates heatmap provide quick overview asset allocation concentrations across various funds accounts asset classes. Higher values highlighted using specified high color (h_color, default: darkorange3), lower values use low color (l_color, default: honeydew1), illustrating intensity allocation combination.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AssetClassAllocationTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AssetClassAllocationTable — AssetClassAllocationTable","text":"","code":"AssetClassAllocationTable(   df,   x_col,   y_col,   value_col,   chart_title,   l_color = \"honeydew1\",   h_color = \"darkorange3\" )"},{"path":"https://menzy17.github.io/Fairlytics/reference/AssetClassAllocationTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AssetClassAllocationTable — AssetClassAllocationTable","text":"df data frame containing data visualized. x_col (string) specifying column name x-axis (e.g., fund names). y_col (string) specifying column name y-axis (e.g., asset classes). value_col (string) specifying column name values displayed used heatmap coloring. chart_title (string) specifying title chart. l_color (string) specifying low-end color heatmap gradient (default: \"honeydew1\"). h_color (string) specifying high-end color heatmap gradient (default: \"darkorange3\").","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AssetClassAllocationTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AssetClassAllocationTable — AssetClassAllocationTable","text":"heatmap plotly::ggplotly object.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/AssetClassAllocationTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AssetClassAllocationTable — AssetClassAllocationTable","text":"","code":"# Example data test_df <- data.frame(   fund = rep(c(\"Fund A\", \"Fund B\", \"Fund C\"), each = 3),   asset_class = rep(c(\"Equity\", \"Fixed Income\", \"Cash\"), 3),   allocation = runif(9, 0, 1) )  AssetClassAllocationTable(   df = test_df,   x_col = \"fund\",   y_col = \"asset_class\",   value_col = \"allocation\",   chart_title = \"Asset Allocation Heatmap\" )  {\"x\":{\"data\":[{\"x\":[1,2,3],\"y\":[1,2,3],\"z\":[[0.24325968730169095,0,0.84751810577087394],[1,0.10833114244861977,0.084987710882833495],[0.47655038410146888,0.52357002663844088,0.050964232286748318]],\"text\":[[\"fund: Fund A<br />asset_class: Cash<br />allocation: 0.24195320\",\"fund: Fund B<br />asset_class: Cash<br />allocation: 0.04487934\",\"fund: Fund C<br />asset_class: Cash<br />allocation: 0.73148576\"],[\"fund: Fund A<br />asset_class: Equity<br />allocation: 0.85501710\",\"fund: Fund B<br />asset_class: Equity<br />allocation: 0.13264249\",\"fund: Fund C<br />asset_class: Equity<br />allocation: 0.11373109\"],[\"fund: Fund A<br />asset_class: Fixed Income<br />allocation: 0.43095080\",\"fund: Fund B<br />asset_class: Fixed Income<br />allocation: 0.46904319\",\"fund: Fund C<br />asset_class: Fixed Income<br />allocation: 0.08616739\"]],\"colorscale\":[[0,\"#F0FFF0\"],[0.050964232286748318,\"#F1F7E4\"],[0.084987710882833495,\"#F1F2DC\"],[0.10833114244861977,\"#F1EED7\"],[0.24325968730169095,\"#F1D9B8\"],[0.47655038410146888,\"#EBB584\"],[0.52357002663844088,\"#E9AE79\"],[0.84751810577087394,\"#D87D31\"],[1,\"#CD6600\"]],\"type\":\"heatmap\",\"showscale\":false,\"autocolorscale\":false,\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1,1,1,2,2,2,3,3,3],\"y\":[2,3,1,2,3,1,2,3,1],\"text\":[\"86\",\"43\",\"24\",\"13\",\"47\",\"4\",\"11\",\"9\",\"73\"],\"hovertext\":[\"fund: Fund A<br />asset_class: Equity<br />paste0(round(100 * allocation, 0)): 86\",\"fund: Fund A<br />asset_class: Fixed Income<br />paste0(round(100 * allocation, 0)): 43\",\"fund: Fund A<br />asset_class: Cash<br />paste0(round(100 * allocation, 0)): 24\",\"fund: Fund B<br />asset_class: Equity<br />paste0(round(100 * allocation, 0)): 13\",\"fund: Fund B<br />asset_class: Fixed Income<br />paste0(round(100 * allocation, 0)): 47\",\"fund: Fund B<br />asset_class: Cash<br />paste0(round(100 * allocation, 0)): 4\",\"fund: Fund C<br />asset_class: Equity<br />paste0(round(100 * allocation, 0)): 11\",\"fund: Fund C<br />asset_class: Fixed Income<br />paste0(round(100 * allocation, 0)): 9\",\"fund: Fund C<br />asset_class: Cash<br />paste0(round(100 * allocation, 0)): 73\"],\"textfont\":{\"size\":13.228346456692915,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":53.193856371938566,\"r\":13.283520132835198,\"b\":91.01227047959371,\"l\":159.07015359070155},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Asset Allocation Heatmap\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":23.910336239103366},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Fund A\",\"Fund B\",\"Fund C\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Fund A\",\"Fund B\",\"Fund C\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":16.604400166044005},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Cash\",\"Equity\",\"Fixed Income\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Cash\",\"Equity\",\"Fixed Income\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":15.940224159402243},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"1620664a2bb5\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"heatmap\"},\"16206e5a91e\":{\"x\":{},\"y\":{},\"label\":{}}},\"cur_data\":\"1620664a2bb5\",\"visdat\":{\"1620664a2bb5\":[\"function (y) \",\"x\"],\"16206e5a91e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/BarChartPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"BarChartPlot — BarChartPlot","title":"BarChartPlot — BarChartPlot","text":"Generates bar chart using ggplot2 returns plotly object interactive use.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/BarChartPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BarChartPlot — BarChartPlot","text":"","code":"BarChartPlot(df, x_col, y_col, width = 0.5, color = \"#FF8200\")"},{"path":"https://menzy17.github.io/Fairlytics/reference/BarChartPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BarChartPlot — BarChartPlot","text":"df data frame containing data bar chart. x_col (string) column df used x-axis. y_col (string) column df used y-axis values. width (numeric) Width bars (default 0.5). color (hex string) Color bars hex format (default \"#FF8200\").","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/BarChartPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BarChartPlot — BarChartPlot","text":"plotly object containing bar chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/BondMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Bond Metrics — BondMetrics","title":"Bond Metrics — BondMetrics","text":"BondMetrics function calculates augments bond metrics given data frame. computes current yield, weighted metrics (Modified Duration, Credit Spread Duration, Current Yield) based specified weights, categorizes bonds maturity year ranges.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/BondMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bond Metrics — BondMetrics","text":"","code":"BondMetrics(Cube)"},{"path":"https://menzy17.github.io/Fairlytics/reference/BondMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bond Metrics — BondMetrics","text":"Cube data frame containing bond data. must include following columns: Coupon: coupon rate bond. Price: current price bond. ModifiedDuration: modified duration bond. CreditSpreadDuration: credit spread duration bond. weight: weight associated bond. Maturity: maturity date bond. report_date: date report.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/BondMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bond Metrics — BondMetrics","text":"data frame following additional columns: CurrentYield: current yield bond. Weighted_MD: weighted modified duration bond. Weighted_CS: weighted credit spread duration bond. Weighted_CY: weighted current yield bond. YearsToMaturity: number years bond matures. YearSplit: categorical variable indicating maturity range bond.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/CalendarReturnsTable.html","id":null,"dir":"Reference","previous_headings":"","what":"CalendarReturnsTable — CalendarReturnsTable","title":"CalendarReturnsTable — CalendarReturnsTable","text":"function visualizes data table calendar returns, month represented columns Year--Date (YTD) column included final column. table formatted percentage-style columns easy comparison analysis monthly YTD returns.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/CalendarReturnsTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CalendarReturnsTable — CalendarReturnsTable","text":"","code":"CalendarReturnsTable(df)"},{"path":"https://menzy17.github.io/Fairlytics/reference/CalendarReturnsTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CalendarReturnsTable — CalendarReturnsTable","text":"df data frame containing monthly return data columns month (typically named according month.abb) YTD column representing year--date performance.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/CalendarReturnsTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CalendarReturnsTable — CalendarReturnsTable","text":"styled DT object (DataTables JavaScript table rendered HTML) easy visualization. table includes fixed headers, center-aligned text, highlighted YTD column better readability emphasis.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/CalendarReturnsTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CalendarReturnsTable — CalendarReturnsTable","text":"","code":"# Example data frame for returns visualization returns_df <- data.frame(   Year = c(2024, 2023),   Jan = c(0.05, 0.04),   Feb = c(0.02, 0.03),   Mar = c(0.02, 0.03),   Apr = c(-0.01, 0.00),   May = c(-0.2, 0.00),   Jun = c(-0.01, 0.00),   Jul = c(-0.01, 0.00),   Aug = c(-0.01, 0.01),   Sep = c(-0.01, 0.00),   Oct = c(-0.01, 0.00),   Nov = c(-0.01, 0.00),   Dec = c(-0.01, 0.00),   YTD = c(0.06, 0.07) ) CalendarReturnsTable(returns_df)  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"FixedHeader\"],\"data\":[[2024,2023],[0.05,0.04],[0.02,0.03],[0.02,0.03],[-0.01,0],[-0.2,0],[-0.01,0],[-0.01,0],[-0.01,0.01],[-0.01,0],[-0.01,0],[-0.01,0],[-0.01,0],[0.06,0.07000000000000001]],\"container\":\"<table class=\\\"cell-border\\\">\\n  <thead>\\n    <tr>\\n      <th>Year<\\/th>\\n      <th>Jan<\\/th>\\n      <th>Feb<\\/th>\\n      <th>Mar<\\/th>\\n      <th>Apr<\\/th>\\n      <th>May<\\/th>\\n      <th>Jun<\\/th>\\n      <th>Jul<\\/th>\\n      <th>Aug<\\/th>\\n      <th>Sep<\\/th>\\n      <th>Oct<\\/th>\\n      <th>Nov<\\/th>\\n      <th>Dec<\\/th>\\n      <th>YTD<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"ft\",\"ordering\":false,\"columnDefs\":[{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":8,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":9,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":10,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":11,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":12,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":13,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatPercentage(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-center\",\"targets\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{\"name\":\"Year\",\"targets\":0},{\"name\":\"Jan\",\"targets\":1},{\"name\":\"Feb\",\"targets\":2},{\"name\":\"Mar\",\"targets\":3},{\"name\":\"Apr\",\"targets\":4},{\"name\":\"May\",\"targets\":5},{\"name\":\"Jun\",\"targets\":6},{\"name\":\"Jul\",\"targets\":7},{\"name\":\"Aug\",\"targets\":8},{\"name\":\"Sep\",\"targets\":9},{\"name\":\"Oct\",\"targets\":10},{\"name\":\"Nov\",\"targets\":11},{\"name\":\"Dec\",\"targets\":12},{\"name\":\"YTD\",\"targets\":13}],\"pageLength\":2,\"fixedHeader\":true,\"initComplete\":\"function(settings, json) {\\n$('th').css('border-color', '#FFB376');\\n}\",\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[2,10,25,50,100],\"rowCallback\":\"function(row, data, displayNum, displayIndex, dataIndex) {\\nvar value=data[13]; $(this.api().cell(row, 13).node()).css({'font-weight':'Bold','background-color':'#F9D5B8'});\\n}\"},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\",\"options.columnDefs.8.render\",\"options.columnDefs.9.render\",\"options.columnDefs.10.render\",\"options.columnDefs.11.render\",\"options.columnDefs.12.render\",\"options.initComplete\",\"options.rowCallback\"],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Summary Performance Metrics — ComputeReturnMetrics","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"Calculate Month--Date (MTD), Year--Date (YTD), Inception--Date (ITD) performance returns based cumulative returns data frame. Ensures date-based calculations aligned business days specified calendar.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"","code":"ComputeReturnMetrics(   cumulative_df,   date_col,   current_date,   value_cols = NULL,   calendar = \"QuantLib/SouthAfrica\" )"},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"cumulative_df data frame containing cumulative return data. date_col string specifying name column containing date values. current_date Date object representing current date calculation. value_cols character vector specifying columns performance returns calculated. calendar string specifying business calendar use. Defaults \"QuantLib/SouthAfrica\".","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"data frame containing MTD, YTD, ITD performance metrics.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"function ensures last month-end last year-end dates valid business dates according specified business calendar. returns calculated : MTD Return: Performance last business day previous month current_date. YTD Return: Performance last business day previous year current_date. ITD Return: Performance since inception (assumed 100 beginning).","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ComputeReturnMetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Summary Performance Metrics — ComputeReturnMetrics","text":"","code":"if (FALSE) { library(dplyr) library(lubridate) library(bizdays)  # Load business calendar load_quantlib_calendars(ql_calendars = \"SouthAfrica\", from = as.Date(\"2023-01-01\"), to = as.Date(\"2024-12-31\"))  # Create example business dates biz_dates <- bizdays::bizseq(from = as.Date(\"2023-01-01\"), to = as.Date(\"2024-12-31\"), cal = \"QuantLib/SouthAfrica\")  # Sample cumulative returns dataset set.seed(123) cumulative_df <- data.frame(   Date = biz_dates,   Return1 = runif(length(biz_dates), 95, 105),   Return2 = runif(length(biz_dates), 90, 110) )  # Run function ComputeReturnMetrics(cumulative_df, \"Date\", as.Date(\"2024-01-31\"), value_cols = c(\"Return1\", \"Return2\")) }"},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-getLastBizDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Last Business Date — .getLastBizDate","title":"Get the Last Business Date — .getLastBizDate","text":"function finds recent business date equal given date according specified business calendar.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-getLastBizDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Last Business Date — .getLastBizDate","text":"","code":".getLastBizDate(date, calendar)"},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-getLastBizDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Last Business Date — .getLastBizDate","text":"date Date object representing target date. calendar vector Date objects representing valid business days.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-getLastBizDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Last Business Date — .getLastBizDate","text":"Date object corresponding last business date equal date.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-getLastBizDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Last Business Date — .getLastBizDate","text":"","code":"calendar <- as.Date(c(\"2024-01-02\", \"2024-01-03\", \"2024-01-04\")) .getLastBizDate(as.Date(\"2024-01-05\"), calendar) # Returns \"2024-01-04\" #> [1] \"2024-01-04\""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-inputColumnChecker.html","id":null,"dir":"Reference","previous_headings":"","what":".inputColumnChecker — .inputColumnChecker","title":".inputColumnChecker — .inputColumnChecker","text":"Check Input Column Names Passed User","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-inputColumnChecker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".inputColumnChecker — .inputColumnChecker","text":"","code":".inputColumnChecker(df, ...)"},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-inputColumnChecker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".inputColumnChecker — .inputColumnChecker","text":"df data frame. ... Names columns check .","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/dot-inputColumnChecker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".inputColumnChecker — .inputColumnChecker","text":"Throws error columns found.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ExtractFunds.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Funds — ExtractFunds","title":"Extract Funds — ExtractFunds","text":"#' @description ExtractFunds function processes raw holdings data extract format fund information. creates data frame distinct fund names descriptions, separating descriptions components portfolio, benchmark, differences. Users can choose whether include benchmark information output.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ExtractFunds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Funds — ExtractFunds","text":"","code":"ExtractFunds(   raw_holdings_data,   report_col,   universe_info_col,   include_benchmarks = T )"},{"path":"https://menzy17.github.io/Fairlytics/reference/ExtractFunds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Funds — ExtractFunds","text":"raw_holdings_data data frame containing raw holdings data. must include columns specified report_col universe_info_col. report_col string specifying name column contains fund report names. universe_info_col string specifying name column containing detailed fund descriptions (e.g., portfolio, benchmark, differences). include_benchmarks boolean flag indicating whether include benchmark information output. Default TRUE. set FALSE, benchmark column excluded result.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ExtractFunds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Funds — ExtractFunds","text":"data frame following columns: report_name: name fund report. port: portfolio description extracted header_report_universes. bench: benchmark description extracted header_report_universes (included includeBenchmarks TRUE). diff: additional differences extracted header_report_universes.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/fairlytics-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fairlytics: The package provides a collection of Fairtree functions for performing data cleaning and processing — fairlytics-package","title":"fairlytics: The package provides a collection of Fairtree functions for performing data cleaning and processing — fairlytics-package","text":"`fairlytics` package provides collection essential functions developed used team. package includes variety functions data cleaning, manipulation, visualization data analysis,","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/fairlytics-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fairlytics: The package provides a collection of Fairtree functions for performing data cleaning and processing — fairlytics-package","text":"Maintainer: Menzi Njakazi menzin@fairtree.com","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Business Days Between Two Dates — GenerateBusinessDays","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"function generates sequence business days given start end date using specified business calendar.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"","code":"GenerateBusinessDays(bgn_date, end_date, calendar = \"QuantLib/SouthAfrica\")"},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"bgn_date Date object string YYYY-MM-DD format representing start date. end_date Date object string YYYY-MM-DD format representing end date. calendar string specifying business calendar use. Defaults \"QuantLib/SouthAfrica\".","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"tibble containing sequence business days bgn_date end_date.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"function relies bizdays package calculate business days, uses QuantLib implementation calendar definitions. Ensure calendar loaded load_quantlib_calendars calling function.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateBusinessDays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Business Days Between Two Dates — GenerateBusinessDays","text":"","code":"# Example usage: GenerateBusinessDays(\"2025-01-01\", \"2025-01-31\", calendar = \"QuantLib/SouthAfrica\") #> Calendar QuantLib/SouthAfrica loaded #> # A tibble: 22 × 1 #>    value      #>    <date>     #>  1 2025-01-02 #>  2 2025-01-03 #>  3 2025-01-06 #>  4 2025-01-07 #>  5 2025-01-08 #>  6 2025-01-09 #>  7 2025-01-10 #>  8 2025-01-13 #>  9 2025-01-14 #> 10 2025-01-15 #> # ℹ 12 more rows"},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateCalendarReturn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Calendar Returns Table — GenerateCalendarReturn","title":"Create a Calendar Returns Table — GenerateCalendarReturn","text":"function calculates calendar returns based given dataset, organizing returns year month, computing Year--Date (YTD) return.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateCalendarReturn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Calendar Returns Table — GenerateCalendarReturn","text":"","code":"GenerateCalendarReturn(df, date_col, return_col)"},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateCalendarReturn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Calendar Returns Table — GenerateCalendarReturn","text":"df data frame containing date return columns. date_col string specifying name date column df. return_col string specifying name return column df.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/GenerateCalendarReturn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Calendar Returns Table — GenerateCalendarReturn","text":"data frame row represents year, monthly returns columns YTD return column.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/HolidayRemover.html","id":null,"dir":"Reference","previous_headings":"","what":"HolidayRemover — HolidayRemover","title":"HolidayRemover — HolidayRemover","text":"HolidayRemover function cleanses dataset removing weekends holidays. generates custom business day calendar based minimum maximum dates dataset, using specified holiday calendar. particularly useful analyzing time series data include business days.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/HolidayRemover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HolidayRemover — HolidayRemover","text":"","code":"HolidayRemover(data, date_col, calendar_name = \"SouthAfrica\")"},{"path":"https://menzy17.github.io/Fairlytics/reference/HolidayRemover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HolidayRemover — HolidayRemover","text":"data data frame containing Date column. column required must represent dates evaluate. date_col string specifying name column data contains date values. column class Date convertible . calendar_name string specifying name holiday calendar use. default \"SouthAfrica\". can choose valid calendar supported bizdays package.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/HolidayRemover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HolidayRemover — HolidayRemover","text":"data-frame excluding holidays weekends based calendar provided","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/HolidayRemover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HolidayRemover — HolidayRemover","text":"","code":"# Example dataset data_df <- data.frame(   Date = seq(as.Date(\"2024-01-01\"), as.Date(\"2024-01-10\"), by = \"day\"),   Value = rnorm(10) )  # Removing weekends and South African holidays from the dataset cleaned_data <- HolidayRemover(data = data_df, \"Date\", calendar_name = \"SouthAfrica\") #> Calendar QuantLib/SouthAfrica loaded print(cleaned_data) #> # A tibble: 7 × 2 #>   Date         Value #>   <date>       <dbl> #> 1 2024-01-02  0.462  #> 2 2024-01-03 -0.988  #> 3 2024-01-04 -0.184  #> 4 2024-01-05 -0.934  #> 5 2024-01-08  0.270  #> 6 2024-01-09 -0.0247 #> 7 2024-01-10 -0.630"},{"path":"https://menzy17.github.io/Fairlytics/reference/InvestmentLookThrough.html","id":null,"dir":"Reference","previous_headings":"","what":"InvestmentLookThrough — InvestmentLookThrough","title":"InvestmentLookThrough — InvestmentLookThrough","text":"InvestmentLookThrough function provides deeper analysis underlying fund investments within portfolio. Rather viewing fund investment single entity, function breaks fund investment examine individual securities holdings contains. approach offers granular understanding fund's actual exposure different assets. exposure values adjusted scaled align overall value fund investment within portfolio.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/InvestmentLookThrough.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InvestmentLookThrough — InvestmentLookThrough","text":"","code":"InvestmentLookThrough(   fund_holdings,   underlying_holdings,   lookup_fund_ticker,   pos_value_col,   tickers_col,   wgt_col )"},{"path":"https://menzy17.github.io/Fairlytics/reference/InvestmentLookThrough.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InvestmentLookThrough — InvestmentLookThrough","text":"fund_holdings data frame representing exposure fund holdings. must include zar_position_value weight columns. underlying_holdings data frame representing underlying securities holdings within fund. must include column matching pos_value_col parameter. lookup_fund_ticker specifying ticker underlying fund within fund_holdings data frame. example, \"ABC SJ Equity\". pos_value_col string representing column name position values data frames. example, \"zar_position_value\". tickers_col string representing column name fund tickers fund_holdings data frame. example, \"instrument_name\". wgt_col string representing column name weights fund_holdings data frame. example, \"weight\".","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/InvestmentLookThrough.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InvestmentLookThrough — InvestmentLookThrough","text":"data frame containing rescaled look-data, values adjusted based overall fund investment. output includes rescaled position values updated weights underlying securities.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/InvestmentLookThrough.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InvestmentLookThrough — InvestmentLookThrough","text":"","code":"# Example data for overall fund holdings fund_holdings <- data.frame(   instrument_name = c(\"ABC SJ Equity\", \"XYZ Bond\"),   zar_position_value = c(1000000, 500000),   weight = c(0.6, 0.4) )  # Example data for underlying holdings of the fund \"ABC SJ Equity\" underlying_holdings <- data.frame(   security_name = c(\"Security A\", \"Security B\", \"Security C\"),   zar_position_value = c(600000, 300000, 100000) )  # Performing the investment look-through analysis result <- InvestmentLookThrough(   fund_holdings = fund_holdings,   underlying_holdings = underlying_holdings,   lookup_fund_ticker = \"ABC SJ Equity\",   pos_value_col = \"zar_position_value\",   tickers_col = \"instrument_name\",   wgt_col = \"weight\" )  print(result) #>   security_name weight zar_position_value #> 1    Security A   0.36             540000 #> 2    Security B   0.18             270000 #> 3    Security C   0.06              90000"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":null,"dir":"Reference","previous_headings":"","what":"LineChart — LineChart","title":"LineChart — LineChart","text":"function create interactive line chart using ggplot2 plotly customizable options x-axis, y-axis, color, grouping, chart title.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LineChart — LineChart","text":"","code":"LineChart(df, x_col, y_col, color_col, group_col, chart_title)"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LineChart — LineChart","text":"df data frame containing data visualized. x_col string representing column name df used x-axis. y_col string representing column name df used y-axis. color_col string representing column name df define color lines. group_col string representing column name df used group data series. chart_title string title chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LineChart — LineChart","text":"plotly object representing interactive line chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LineChart — LineChart","text":"function uses ggplot2 create line chart following features: Data grouped group_col column separate line series. Line colors defined color_col column. chart title labeled axes. continuous y-axis scaled display percentages. Conversion ggplot2 object interactive plotly chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LineChart — LineChart","text":"","code":"library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.2.3 library(plotly) #> Warning: package 'plotly' was built under R version 4.2.3 data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = runif(10),   ColorGroup = rep(c(\"Red\", \"Blue\"), each = 5),   Group = rep(c(\"A\", \"B\"), each = 5) )  chart <- LineChart(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"Interactive Line Chart\" ) chart  {\"x\":{\"data\":[{\"x\":[20127,20128,20129,20130,20131],\"y\":[0.49229775299318135,0.2243807353079319,0.081464179325848818,0.0294801767449826,0.66568662342615426],\"text\":[\"Date: 2025-02-08<br />Value: 0.49229775<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-09<br />Value: 0.22438074<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-10<br />Value: 0.08146418<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-11<br />Value: 0.02948018<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-12<br />Value: 0.66568662<br />ColorGroup: Blue<br />Group: B\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Blue\",\"legendgroup\":\"Blue\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20122,20123,20124,20125,20126],\"y\":[0.53541482356376946,0.090536973671987653,0.58543171896599233,0.9589726198464632,0.2897479294333607],\"text\":[\"Date: 2025-02-03<br />Value: 0.53541482<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-04<br />Value: 0.09053697<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-05<br />Value: 0.58543172<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-06<br />Value: 0.95897262<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-07<br />Value: 0.28974793<br />ColorGroup: Red<br />Group: A\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Red\",\"legendgroup\":\"Red\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":40.840182648401829,\"r\":7.3059360730593621,\"b\":22.648401826484022,\"l\":48.949771689497723},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Interactive Line Chart\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[20121.549999999999,20131.450000000001],\"tickmode\":\"array\",\"ticktext\":[\"Feb 04\",\"Feb 06\",\"Feb 08\",\"Feb 10\",\"Feb 12\"],\"tickvals\":[20123,20125,20127,20129,20131],\"categoryorder\":\"array\",\"categoryarray\":[\"Feb 04\",\"Feb 06\",\"Feb 08\",\"Feb 10\",\"Feb 12\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.01699444541009143,1.0054472420015372],\"tickmode\":\"array\",\"ticktext\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"tickvals\":[0,0.25,0.5,0.75,1],\"categoryorder\":\"array\",\"categoryarray\":[\"0.00\",\"0.25\",\"0.50\",\"0.75\",\"1.00\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"ColorGroup\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"162047bfd77\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"162047bfd77\",\"visdat\":{\"162047bfd77\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":null,"dir":"Reference","previous_headings":"","what":"LineChartr — LineChartr","title":"LineChartr — LineChartr","text":"function create line chart using highcharter library customizable options x-axis, y-axis, color grouping. chart includes exporting functionality stylistic customizations.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LineChartr — LineChartr","text":"","code":"LineChartr(df, x_col, y_col, color_col, group_col, chart_title)"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LineChartr — LineChartr","text":"df data frame containing data visualized. x_col string representing column name df used x-axis. y_col string representing column name df used y-axis. color_col string representing column name df determine color series (optional). group_col string representing column name df used group data series. chart_title string title chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LineChartr — LineChartr","text":"highchart object representing line chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LineChartr — LineChartr","text":"function creates line chart following features: Grouping group_col column different series. Optional customization series colors using color_col. chart title labeled axes. Export functionality download chart white background. disabled range selector simplicity. Default styling disables markers cleaner look.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LineChartr — LineChartr","text":"","code":"library(highcharter) library(lubridate) data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = rnorm(10),   Group = rep(c(\"A\", \"B\"), each = 5) ) chart <- LineChartr(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = NULL,   group_col = \"Group\",   chart_title = \"Sample Line Chart\" ) chart  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"backgroundColor\":\"#ffffff\"},\"title\":{\"text\":\"Sample Line Chart\"},\"yAxis\":{\"title\":{\"text\":\"Value\"},\"type\":\"linear\"},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"Sample Line Chart\"},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":true,\"marker\":{\"enabled\":false}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"series\":[{\"name\":\"A\",\"data\":[{\"Date\":\"2025-02-03\",\"Value\":0.5304335236574045,\"Group\":\"A\",\"x\":1738540800000,\"y\":0.5304335236574045},{\"Date\":\"2025-02-04\",\"Value\":0.3320408468067143,\"Group\":\"A\",\"x\":1738627200000,\"y\":0.3320408468067143},{\"Date\":\"2025-02-05\",\"Value\":0.54486996395859,\"Group\":\"A\",\"x\":1738713600000,\"y\":0.54486996395859},{\"Date\":\"2025-02-06\",\"Value\":-0.4138467573302473,\"Group\":\"A\",\"x\":1738800000000,\"y\":-0.4138467573302473},{\"Date\":\"2025-02-07\",\"Value\":0.2756181334091217,\"Group\":\"A\",\"x\":1738886400000,\"y\":0.2756181334091217}],\"type\":\"line\"},{\"name\":\"B\",\"data\":[{\"Date\":\"2025-02-08\",\"Value\":0.6652068948222909,\"Group\":\"B\",\"x\":1738972800000,\"y\":0.6652068948222909},{\"Date\":\"2025-02-09\",\"Value\":0.8086382355460037,\"Group\":\"B\",\"x\":1739059200000,\"y\":0.8086382355460037},{\"Date\":\"2025-02-10\",\"Value\":0.3464993100605007,\"Group\":\"B\",\"x\":1739145600000,\"y\":0.3464993100605007},{\"Date\":\"2025-02-11\",\"Value\":-0.02282605364872104,\"Group\":\"B\",\"x\":1739232000000,\"y\":-0.02282605364872104},{\"Date\":\"2025-02-12\",\"Value\":0.5966327182670911,\"Group\":\"B\",\"x\":1739318400000,\"y\":0.5966327182670911}],\"type\":\"line\"}],\"xAxis\":{\"type\":\"datetime\",\"title\":{\"text\":\"Date\"},\"categories\":null},\"rangeSelector\":{\"enabled\":false}},\"theme\":{\"chart\":{\"backgroundColor\":\"#ffffff\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"LineChartWrapper — LineChartWrapper","title":"LineChartWrapper — LineChartWrapper","text":"wrapper function create interactive line chart using either ggplot2 highcharter, customizable options x-axis, y-axis, color, grouping, chart title.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LineChartWrapper — LineChartWrapper","text":"","code":"LineChartWrapper(   df,   x_col,   y_col,   color_col,   group_col,   chart_title,   plot_engine = c(\"ggplot2\", \"highcharter\") )"},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LineChartWrapper — LineChartWrapper","text":"df data frame containing data visualized. x_col string representing column name df used x-axis. y_col string representing column name df used y-axis. color_col string representing column name df define color lines. group_col string representing column name df used group data series. chart_title string title chart. plot_engine string indicating plotting engine use. Can either \"ggplot2\" \"highcharter\". Default \"ggplot2\".","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LineChartWrapper — LineChartWrapper","text":"plotly object (\"ggplot2\" chosen) highchart object (\"highcharter\" chosen) representing interactive line chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LineChartWrapper — LineChartWrapper","text":"function creates interactive line chart following features: Data grouped group_col column separate line series. Line colors defined color_col column. chart title labeled axes. continuous y-axis scaled display percentages. Converts ggplot2 object interactive plotly chart creates highcharter line chart.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/LineChartWrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LineChartWrapper — LineChartWrapper","text":"","code":"library(ggplot2) library(plotly) data <- data.frame(   Date = seq.Date(from = Sys.Date() - 10, by = \"day\", length.out = 10),   Value = runif(10),   ColorGroup = rep(c(\"Red\", \"Blue\"), each = 5),   Group = rep(c(\"A\", \"B\"), each = 5) ) chart_ggplot2 <- LineChartWrapper(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"Interactive Line Chart (ggplot2)\",   plot_engine = \"ggplot2\" ) chart_ggplot2  {\"x\":{\"data\":[{\"x\":[20127,20128,20129,20130,20131],\"y\":[0.71359523222781718,0.49072667839936912,0.51326070795767009,0.75921580940485001,0.36851853947155178],\"text\":[\"Date: 2025-02-08<br />Value: 0.7135952<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-09<br />Value: 0.4907267<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-10<br />Value: 0.5132607<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-11<br />Value: 0.7592158<br />ColorGroup: Blue<br />Group: B\",\"Date: 2025-02-12<br />Value: 0.3685185<br />ColorGroup: Blue<br />Group: B\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Blue\",\"legendgroup\":\"Blue\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20122,20123,20124,20125,20126],\"y\":[0.84736797283403575,0.51479224604554474,0.4747856177855283,0.83882281300611794,0.16077461047098041],\"text\":[\"Date: 2025-02-03<br />Value: 0.8473680<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-04<br />Value: 0.5147922<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-05<br />Value: 0.4747856<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-06<br />Value: 0.8388228<br />ColorGroup: Red<br />Group: A\",\"Date: 2025-02-07<br />Value: 0.1607746<br />ColorGroup: Red<br />Group: A\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Red\",\"legendgroup\":\"Red\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":40.840182648401829,\"r\":7.3059360730593621,\"b\":22.648401826484022,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Interactive Line Chart (ggplot2)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[20121.549999999999,20131.450000000001],\"tickmode\":\"array\",\"ticktext\":[\"Feb 04\",\"Feb 06\",\"Feb 08\",\"Feb 10\",\"Feb 12\"],\"tickvals\":[20123,20125,20127,20129,20131],\"categoryorder\":\"array\",\"categoryarray\":[\"Feb 04\",\"Feb 06\",\"Feb 08\",\"Feb 10\",\"Feb 12\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.12644494235282763,0.8816976409521885],\"tickmode\":\"array\",\"ticktext\":[\"0.3\",\"0.5\",\"0.7\"],\"tickvals\":[0.30000000000000004,0.5,0.70000000000000007],\"categoryorder\":\"array\",\"categoryarray\":[\"0.3\",\"0.5\",\"0.7\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"ColorGroup\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"162020ed38e1\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"162020ed38e1\",\"visdat\":{\"162020ed38e1\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} chart_highcharter <- LineChartWrapper(   df = data,   x_col = \"Date\",   y_col = \"Value\",   color_col = \"ColorGroup\",   group_col = \"Group\",   chart_title = \"Interactive Line Chart (Highcharter)\",   plot_engine = \"highcharter\" ) chart_highcharter  {\"x\":{\"hc_opts\":{\"chart\":{\"reflow\":true,\"backgroundColor\":\"#ffffff\"},\"title\":{\"text\":\"Interactive Line Chart (Highcharter)\"},\"yAxis\":{\"title\":{\"text\":\"Value\"},\"type\":\"linear\"},\"credits\":{\"enabled\":false},\"exporting\":{\"enabled\":true,\"filename\":\"Interactive Line Chart (Highcharter)\"},\"boost\":{\"enabled\":false},\"plotOptions\":{\"series\":{\"label\":{\"enabled\":false},\"turboThreshold\":0,\"showInLegend\":true,\"marker\":{\"enabled\":false}},\"treemap\":{\"layoutAlgorithm\":\"squarified\"},\"scatter\":{\"marker\":{\"symbol\":\"circle\"}}},\"series\":[{\"name\":\"A\",\"data\":[{\"Date\":\"2025-02-03\",\"Value\":0.8473679728340358,\"ColorGroup\":\"Red\",\"Group\":\"A\",\"x\":1738540800000,\"y\":0.8473679728340358},{\"Date\":\"2025-02-04\",\"Value\":0.5147922460455447,\"ColorGroup\":\"Red\",\"Group\":\"A\",\"x\":1738627200000,\"y\":0.5147922460455447},{\"Date\":\"2025-02-05\",\"Value\":0.4747856177855283,\"ColorGroup\":\"Red\",\"Group\":\"A\",\"x\":1738713600000,\"y\":0.4747856177855283},{\"Date\":\"2025-02-06\",\"Value\":0.8388228130061179,\"ColorGroup\":\"Red\",\"Group\":\"A\",\"x\":1738800000000,\"y\":0.8388228130061179},{\"Date\":\"2025-02-07\",\"Value\":0.1607746104709804,\"ColorGroup\":\"Red\",\"Group\":\"A\",\"x\":1738886400000,\"y\":0.1607746104709804}],\"type\":\"line\"},{\"name\":\"B\",\"data\":[{\"Date\":\"2025-02-08\",\"Value\":0.7135952322278172,\"ColorGroup\":\"Blue\",\"Group\":\"B\",\"x\":1738972800000,\"y\":0.7135952322278172},{\"Date\":\"2025-02-09\",\"Value\":0.4907266783993691,\"ColorGroup\":\"Blue\",\"Group\":\"B\",\"x\":1739059200000,\"y\":0.4907266783993691},{\"Date\":\"2025-02-10\",\"Value\":0.5132607079576701,\"ColorGroup\":\"Blue\",\"Group\":\"B\",\"x\":1739145600000,\"y\":0.5132607079576701},{\"Date\":\"2025-02-11\",\"Value\":0.75921580940485,\"ColorGroup\":\"Blue\",\"Group\":\"B\",\"x\":1739232000000,\"y\":0.75921580940485},{\"Date\":\"2025-02-12\",\"Value\":0.3685185394715518,\"ColorGroup\":\"Blue\",\"Group\":\"B\",\"x\":1739318400000,\"y\":0.3685185394715518}],\"type\":\"line\"}],\"xAxis\":{\"type\":\"datetime\",\"title\":{\"text\":\"Date\"},\"categories\":null},\"rangeSelector\":{\"enabled\":false}},\"theme\":{\"chart\":{\"backgroundColor\":\"#ffffff\"},\"colors\":[\"#7cb5ec\",\"#434348\",\"#90ed7d\",\"#f7a35c\",\"#8085e9\",\"#f15c80\",\"#e4d354\",\"#2b908f\",\"#f45b5b\",\"#91e8e1\"]},\"conf_opts\":{\"global\":{\"Date\":null,\"VMLRadialGradientURL\":\"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png\",\"canvasToolsURL\":\"http =//code.highcharts.com/list(version)/modules/canvas-tools.js\",\"getTimezoneOffset\":null,\"timezoneOffset\":0,\"useUTC\":true},\"lang\":{\"contextButtonTitle\":\"Chart context menu\",\"decimalPoint\":\".\",\"downloadCSV\":\"Download CSV\",\"downloadJPEG\":\"Download JPEG image\",\"downloadPDF\":\"Download PDF document\",\"downloadPNG\":\"Download PNG image\",\"downloadSVG\":\"Download SVG vector image\",\"downloadXLS\":\"Download XLS\",\"drillUpText\":\"◁ Back to {series.name}\",\"exitFullscreen\":\"Exit from full screen\",\"exportData\":{\"annotationHeader\":\"Annotations\",\"categoryDatetimeHeader\":\"DateTime\",\"categoryHeader\":\"Category\"},\"hideData\":\"Hide data table\",\"invalidDate\":null,\"loading\":\"Loading...\",\"months\":[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"noData\":\"No data to display\",\"numericSymbolMagnitude\":1000,\"numericSymbols\":[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],\"printChart\":\"Print chart\",\"resetZoom\":\"Reset zoom\",\"resetZoomTitle\":\"Reset zoom level 1:1\",\"shortMonths\":[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"shortWeekdays\":[\"Sat\",\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"thousandsSep\":\" \",\"viewData\":\"View data table\",\"viewFullscreen\":\"View in full screen\",\"weekdays\":[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]}},\"type\":\"chart\",\"fonts\":[],\"debug\":false},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/PerformanceSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Performance Summary Table — PerformanceSummaryTable","title":"Performance Summary Table — PerformanceSummaryTable","text":"PerformanceSummaryTable function renders data frame styled kable object. uses kable function knitr package create clean readable table applies kable_styling additional formatting striped style.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PerformanceSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Summary Table — PerformanceSummaryTable","text":"","code":"PerformanceSummaryTable(df)"},{"path":"https://menzy17.github.io/Fairlytics/reference/PerformanceSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance Summary Table — PerformanceSummaryTable","text":"df data frame representing performance data rendered table.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PerformanceSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performance Summary Table — PerformanceSummaryTable","text":"kable object styled display RMarkdown documents Shiny applications.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PerformanceSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performance Summary Table — PerformanceSummaryTable","text":"","code":"performance_data <- data.frame(   Metric = c(\"Month-to-Date\", \"Year-to-Date\", \"Inception-to-Date\"),   FundA = c(\"1%\", \"7%\", \"15%\"),   FundB = c(\"1.5%\", \"8%\", \"12%\"),   Difference = c(\"-0.5%\", \"-1%\", \"3%\") )  PerformanceSummaryTable(performance_data) #> <table class=\"table table-striped\" style=\"margin-left: auto; margin-right: auto;\"> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\"> Metric <\/th> #>    <th style=\"text-align:left;\"> FundA <\/th> #>    <th style=\"text-align:left;\"> FundB <\/th> #>    <th style=\"text-align:left;\"> Difference <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr> #>    <td style=\"text-align:left;\"> Month-to-Date <\/td> #>    <td style=\"text-align:left;\"> 1% <\/td> #>    <td style=\"text-align:left;\"> 1.5% <\/td> #>    <td style=\"text-align:left;\"> -0.5% <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Year-to-Date <\/td> #>    <td style=\"text-align:left;\"> 7% <\/td> #>    <td style=\"text-align:left;\"> 8% <\/td> #>    <td style=\"text-align:left;\"> -1% <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Inception-to-Date <\/td> #>    <td style=\"text-align:left;\"> 15% <\/td> #>    <td style=\"text-align:left;\"> 12% <\/td> #>    <td style=\"text-align:left;\"> 3% <\/td> #>   <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://menzy17.github.io/Fairlytics/reference/PortfolioModelTable.html","id":null,"dir":"Reference","previous_headings":"","what":"PortfolioModelTable — PortfolioModelTable","title":"PortfolioModelTable — PortfolioModelTable","text":"function returns formatted styled DT table highlighting -weights -weights portfolio compared model weights. table includes color formatting visually represent differences.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PortfolioModelTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PortfolioModelTable — PortfolioModelTable","text":"","code":"PortfolioModelTable(df, mkt_value, port_wgt, model_wgt, active_wgt)"},{"path":"https://menzy17.github.io/Fairlytics/reference/PortfolioModelTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PortfolioModelTable — PortfolioModelTable","text":"df data frame containing input data. mkt_value (string) specifying name column containing market values. port_wgt (string) specifying name column containing portfolio weights holdings. model_wgt (string) specifying name column containing model allocation weights. active_wgt (string)specifying name column containing active weights (difference portfolio weight model weight).","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PortfolioModelTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PortfolioModelTable — PortfolioModelTable","text":"DT object styled easy visualization.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/PortfolioModelTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PortfolioModelTable — PortfolioModelTable","text":"","code":"# Example usage: test_df <- data.frame(   account_code = c('abc', 'xyz', 'test0001'),   asset_class = c('Equities', 'Bonds', 'Commodities'),   mkt_value = c(300, 200, 100),   port_wgt = c(0.5, 0.3, 0.2),   model_wgt = c(0.4, 0.4, 0.2),   active_wgt = c(0.1, -0.1, 0.0) ) PortfolioModelTable(   df = test_df,   mkt_value = \"mkt_value\",   port_wgt = \"port_wgt\",   model_wgt = \"model_wgt\",   active_wgt = \"active_wgt\" )  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"abc\",\"xyz\",\"test0001\"],[\"Equities\",\"Bonds\",\"Commodities\"],[300,200,100],[0.5,0.3,0.2],[0.4,0.4,0.2],[0.1,-0.1,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>account_code<\\/th>\\n      <th>asset_class<\\/th>\\n      <th>mkt_value<\\/th>\\n      <th>port_wgt<\\/th>\\n      <th>model_wgt<\\/th>\\n      <th>active_wgt<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"paging\":false,\"ordering\":false,\"columnDefs\":[{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatCurrency(data, \\\" \\\", 2, 3, \\\" \\\", \\\".\\\", true, null);\\n  }\"},{\"className\":\"dt-left\",\"targets\":[1,2]},{\"className\":\"dt-right\",\"targets\":[3,4,5]},{\"name\":\"account_code\",\"targets\":0},{\"name\":\"asset_class\",\"targets\":1},{\"name\":\"mkt_value\",\"targets\":2},{\"name\":\"port_wgt\",\"targets\":3},{\"name\":\"model_wgt\",\"targets\":4},{\"name\":\"active_wgt\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"rowCallback\":\"function(row, data, displayNum, displayIndex, dataIndex) {\\nvar value=data[3]; $(this.api().cell(row, 3).node()).css({'background':isNaN(parseFloat(value)) || value <= 0.200000 ? '' : 'linear-gradient(90.000000deg, transparent ' + Math.max(0.500000 - value, 0)/0.300000 * 100 + '%, darkturquoise ' + Math.max(0.500000 - value, 0)/0.300000 * 100 + '%)','background-size':'28% 38%','background-repeat':'no-repeat','background-position':'center'});\\nvar value=data[4]; $(this.api().cell(row, 4).node()).css({'background':isNaN(parseFloat(value)) || value <= 0.200000 ? '' : 'linear-gradient(90.000000deg, transparent ' + Math.max(0.400000 - value, 0)/0.200000 * 100 + '%, darkturquoise ' + Math.max(0.400000 - value, 0)/0.200000 * 100 + '%)','background-size':'28% 38%','background-repeat':'no-repeat','background-position':'center'});\\nvar value=data[5]; $(this.api().cell(row, 5).node()).css({'background':isNaN(parseFloat(value)) || value < 0 ? 'linear-gradient(90deg, transparent, transparent ' + (50 + value/0.1 * 50) + '%, orange ' + (50 + value/0.1 * 50) + '%,orange  50%,transparent 50%)': 'linear-gradient(90deg, transparent, transparent 50%, red 50%, red ' + (50 + value/0.1 * 50) + '%, transparent ' + (50 + value/0.1 * 50) + '%)','background-size':'28% 38%','background-repeat':'no-repeat','background-position':'center'});\\n}\"},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[\"options.columnDefs.0.render\",\"options.rowCallback\"],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/ProcessInstrumentMetaID.html","id":null,"dir":"Reference","previous_headings":"","what":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","title":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","text":"ProcessInstrumentMetaID function filters input dataset based specified source names source types provided via source_vector source_type arguments. filtering, removes duplicate rows based instrument_id column.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ProcessInstrumentMetaID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","text":"","code":"ProcessInstrumentMetaID(data_tbl, source_vector, source_type)"},{"path":"https://menzy17.github.io/Fairlytics/reference/ProcessInstrumentMetaID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","text":"data_tbl dataset containing Instrument Meta ID information. source_vector character vector specifying source names filter. source_type character vector specifying source types filter.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ProcessInstrumentMetaID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","text":"tibble containing filtered data.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/ProcessInstrumentMetaID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ProcessInstrumentMetaID — ProcessInstrumentMetaID","text":"","code":"# Example dataset data_tbl <- tibble::tibble(   instrument_id = c(1, 2, 3, 1),   source_name = c(\"SourceA\", \"SourceB\", \"SourceC\", \"SourceA\"),   source_type = c(\"Type1\", \"Type2\", \"Type1\", \"Type1\"),   source_code = c(\"A123\", \"B456\", \"C789\", \"A123\") )  # Specify source names and types to filter source_vector <- c(\"SourceA\", \"SourceB\") source_type <- c(\"Type1\", \"Type2\")  result <- ProcessInstrumentMetaID(data_tbl, source_vector, source_type) print(result) #> # A tibble: 2 × 3 #>   instrument_id source_type InstrumentCode #>           <dbl> <chr>       <chr>          #> 1             1 Type1       A123           #> 2             2 Type2       B456"},{"path":"https://menzy17.github.io/Fairlytics/reference/RelativeWeightBarChart.html","id":null,"dir":"Reference","previous_headings":"","what":"RelativeWeightBarChart — RelativeWeightBarChart","title":"RelativeWeightBarChart — RelativeWeightBarChart","text":"function generates flipped bar graph comprising three vertically aligned bar charts. particularly useful comparing two funds, third chart showing relative difference two. bars colored represent funds, values annotated bars easier interpretation.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/RelativeWeightBarChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RelativeWeightBarChart — RelativeWeightBarChart","text":"","code":"RelativeWeightBarChart(   df,   instrument_col,   weight_col,   fund_label_col,   txt_abv_grph = 0.05,   instr_txt_size = 12.5,   axis_txt_size = 12.5,   num_size = 4,   percent = TRUE )"},{"path":"https://menzy17.github.io/Fairlytics/reference/RelativeWeightBarChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RelativeWeightBarChart — RelativeWeightBarChart","text":"df data frame containing data visualized. instrument_col (string) specifying column name instrument names (used x-axis). weight_col (string) specifying column name weights (used y-axis). fund_label_col (string) specifying column name fund labels (used grouping facetting). txt_abv_grph (numeric) controlling distance bar graph annotated value (default: 0.05). instr_txt_size (numeric) controlling font size instrument text (default: 12.5). axis_txt_size (numeric) controlling font size axis text (default: 12.5). num_size (numeric) controlling size numbers displayed next bars (default: 4). percent (logical) indicating whether y-axis display percentages (TRUE) raw numbers (FALSE) (default: TRUE).","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/RelativeWeightBarChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RelativeWeightBarChart — RelativeWeightBarChart","text":"plotly::ggplotly object containing flipped bar graph.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/RelativeWeightBarChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RelativeWeightBarChart — RelativeWeightBarChart","text":"","code":"# Example data test_df <- data.frame(   instrument = c(\"Instrument A\", \"Instrument B\", \"Instrument C\"),   weight = c(0.1, -0.05, 0.2),   fund_label = c(\"Fund 1\", \"Fund 1\", \"Fund 2\") ) RelativeWeightBarChart(test_df, \"instrument\", \"weight\", \"fund_label\", txt_abv_grph = 0.02)  {\"x\":{\"data\":[{\"orientation\":\"h\",\"width\":[0.5,0.5],\"base\":[0,-0.050000000000000003],\"x\":[0.10000000000000001,0.050000000000000003],\"y\":[2,1],\"text\":[\"reorder(instrument, weight): Instrument A<br />weight: 0.10<br />fund_label: Fund 1\",\"reorder(instrument, weight): Instrument B<br />weight: 0.05<br />fund_label: Fund 1\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,130,0,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Fund 1\",\"legendgroup\":\"Fund 1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"h\",\"width\":0.5,\"base\":0,\"x\":[0.20000000000000001],\"y\":[3],\"text\":\"reorder(instrument, weight): Instrument C<br />weight: 0.20<br />fund_label: Fund 2\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(52,170,157,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Fund 2\",\"legendgroup\":\"Fund 2\",\"showlegend\":true,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.12000000000000001,-0.070000000000000007],\"y\":[2,1],\"text\":[\"10%\",\"-5%\"],\"hovertext\":[\"reorder(instrument, weight): Instrument A<br />if_else(weight > 0, weight + txt_abv_grph, weight - txt_abv_grph):  0.12<br />fund_label: Fund 1<br />if (percent) paste0(round(100 * weight, 1), \\\"%\\\") else round(weight, ...: 10%\",\"reorder(instrument, weight): Instrument B<br />if_else(weight > 0, weight + txt_abv_grph, weight - txt_abv_grph): -0.07<br />fund_label: Fund 1<br />if (percent) paste0(round(100 * weight, 1), \\\"%\\\") else round(weight, ...: -5%\"],\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"name\":\"Fund 1\",\"legendgroup\":\"Fund 1\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.22],\"y\":[3],\"text\":\"20%\",\"hovertext\":\"reorder(instrument, weight): Instrument C<br />if_else(weight > 0, weight + txt_abv_grph, weight - txt_abv_grph):  0.22<br />fund_label: Fund 2<br />if (percent) paste0(round(100 * weight, 1), \\\"%\\\") else round(weight, ...: 20%\",\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"name\":\"Fund 2\",\"legendgroup\":\"Fund 2\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":45.887920298879209,\"r\":13.283520132835198,\"b\":61.768368617683699,\"l\":136.48816936488174},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,0.48858447488584472],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.084500000000000006,0.23450000000000001],\"tickmode\":\"array\",\"ticktext\":[\"0%\",\"10%\",\"20%\"],\"tickvals\":[0,0.099999999999999992,0.20000000000000001],\"categoryorder\":\"array\",\"categoryarray\":[\"0%\",\"10%\",\"20%\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":16.604400166044005},\"tickangle\":-90,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Instrument B\",\"Instrument A\",\"Instrument C\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Instrument B\",\"Instrument A\",\"Instrument C\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":16.604400166044005},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.48858447488584472,\"y0\":0,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":\"rgba(217,217,217,1)\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.48858447488584472,\"y0\":0,\"y1\":28.293897882938985,\"yanchor\":1,\"ysizemode\":\"pixel\"},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.51141552511415522,\"x1\":1,\"y0\":0,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":\"rgba(217,217,217,1)\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.51141552511415522,\"x1\":1,\"y0\":0,\"y1\":28.293897882938985,\"yanchor\":1,\"ysizemode\":\"pixel\"}],\"annotations\":[{\"text\":\"Fund 1\",\"x\":0.24429223744292236,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(139,69,0,1)\",\"family\":\"\",\"size\":16.604400166044005},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"},{\"text\":\"Fund 2\",\"x\":0.75570776255707761,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(139,69,0,1)\",\"family\":\"\",\"size\":16.604400166044005},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"}],\"xaxis2\":{\"type\":\"linear\",\"autorange\":false,\"range\":[-0.084500000000000006,0.23450000000000001],\"tickmode\":\"array\",\"ticktext\":[\"0%\",\"10%\",\"20%\"],\"tickvals\":[0,0.099999999999999992,0.20000000000000001],\"categoryorder\":\"array\",\"categoryarray\":[\"0%\",\"10%\",\"20%\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":16.604400166044005},\"tickangle\":-90,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"domain\":[0.51141552511415522,1],\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":\"\",\"hoverformat\":\".2f\"},\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"162013a86b77\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"bar\"},\"1620358b2b9f\":{\"x\":{},\"y\":{},\"fill\":{},\"label\":{}}},\"cur_data\":\"162013a86b77\",\"visdat\":{\"162013a86b77\":[\"function (y) \",\"x\"],\"1620358b2b9f\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://menzy17.github.io/Fairlytics/reference/Send365Mail.html","id":null,"dir":"Reference","previous_headings":"","what":"Send365Mail — Send365Mail","title":"Send365Mail — Send365Mail","text":"Send365Mail function sends email using Microsoft 365's Outlook service via Microsoft365R package. allows specify recipients, subject, body, optional attachments. function call, performs 5-second pause avoid excessive email sending.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/Send365Mail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send365Mail — Send365Mail","text":"","code":"Send365Mail(receiver, mail_cc, subject, mail_body = \"\", mail_attachment = NULL)"},{"path":"https://menzy17.github.io/Fairlytics/reference/Send365Mail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send365Mail — Send365Mail","text":"receiver character vector email addresses receive email. mail_cc character vector email addresses added CC recipients. subject character string representing subject email. mail_body character string representing body email. Defaults NULL, means body set. provided, HTML format. mail_attachment character vector containing file paths attachments included email. Defaults NULL, meaning attachments included.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/Send365Mail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send365Mail — Send365Mail","text":"None. function sends email return values.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a SQL query with retry mechanism — SendQuery","title":"Execute a SQL query with retry mechanism — SendQuery","text":"SendQuery function attempts execute SQL query database connection retry mechanism. query fails, retries specified number attempts delay attempt.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a SQL query with retry mechanism — SendQuery","text":"","code":"SendQuery(conn, query, max_retries = 2, retry_delay_seconds = 30)"},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a SQL query with retry mechanism — SendQuery","text":"conn database connection object. Typically created using DBI::dbConnect(). query character string representing SQL query executed. max_retries integer specifying maximum number retry attempts query fails. Default 2. retry_delay_seconds integer specifying delay seconds retry attempts. Default 30.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a SQL query with retry mechanism — SendQuery","text":"tibble containing result SQL query. Returns NULL query fails retry attempts.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a SQL query with retry mechanism — SendQuery","text":"function logs table name extracted query, number rows returned upon success, errors encountered execution. retry mechanism ensures transient errors, temporary database unavailability, handled gracefully. function uses tryCatch() error handling logs warnings failed attempts.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendQuery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a SQL query with retry mechanism — SendQuery","text":"","code":"if (FALSE) {   conn <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")   query <- \"SELECT * FROM my_table\"   result <- trySQLQuery(conn, query, max_retries = 3, retry_delay = 10) }"},{"path":"https://menzy17.github.io/Fairlytics/reference/SendRDComMail.html","id":null,"dir":"Reference","previous_headings":"","what":"SendRDComMail — SendRDComMail","title":"SendRDComMail — SendRDComMail","text":"SendRDComMail function sends email using RDCOMCLIENT's Outlook service. allows set recipients, CCs, subject, body, optional attachments. Additionally, flag can set mark email reply. function also includes 5-second delay sending email avoid rapid successive emails.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendRDComMail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SendRDComMail — SendRDComMail","text":"","code":"SendRDComMail(   receiver,   mail_cc,   subject,   mail_body = NULL,   mail_attachment = NULL,   flag = F )"},{"path":"https://menzy17.github.io/Fairlytics/reference/SendRDComMail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SendRDComMail — SendRDComMail","text":"receiver character vector email addresses primary recipients email. mail_cc character vector email addresses CC recipients. Defaults empty string specified. subject character string specifying subject email. mail_body character string specifying body email HTML format. Defaults NULL. NULL, email contain default Outlook signature. mail_attachment character vector containing file paths attachments. Defaults NULL, meaning attachments added. flag logical value indicating whether flag email reply. Defaults FALSE.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendRDComMail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SendRDComMail — SendRDComMail","text":"None. function sends email return value.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SendRDComMail.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SendRDComMail — SendRDComMail","text":"Signature Inclusion: email includes default Outlook signature appending email body. Attachments: can include one multiple attachments providing vector file paths. Delay: delay 5 seconds added sending email prevent excessive calls Outlook API.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsERA.html","id":null,"dir":"Reference","previous_headings":"","what":"SeparateFundsERA — SeparateFundsERA","title":"SeparateFundsERA — SeparateFundsERA","text":"SeparateFundsERA function processes dataset filter format data specific fund. selects relevant columns, replaces missing empty values Sector column \"Cash\", arranges data Ticker. resulting data frame provides key financial information selected fund.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsERA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SeparateFundsERA — SeparateFundsERA","text":"","code":"SeparateFundsERA(data_tbl, fund_name)"},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsERA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SeparateFundsERA — SeparateFundsERA","text":"data_tbl data frame tibble containing financial data. include columns: Fund, Date, Stock, Ticker, Sector, currency, Price, Quantity, Market Value, Weight, Fx Close. fund_name character vector specifying names funds include analysis. function include rows corresponding fund names.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsERA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SeparateFundsERA — SeparateFundsERA","text":"data frame following columns: Date: date record. Fund: name fund. Stock: stock name. Ticker: stock ticker symbol. Sector: sector stock belongs (empty sectors replaced \"Cash\"). currency: currency investment. Price: price stock. Quantity: quantity stock held. Market Value: market value stock. Weight: weight stock within fund. Fx Close: foreign exchange close value.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsLO.html","id":null,"dir":"Reference","previous_headings":"","what":"SeparateFundsLO — SeparateFundsLO","title":"SeparateFundsLO — SeparateFundsLO","text":"SeparateFundsLO function processes dataset filter summarize fund data. filters data specific fund names report date, groups data date sector. function calculates sum weight column sector within specified date, returning summarized data frame.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsLO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SeparateFundsLO — SeparateFundsLO","text":"","code":"SeparateFundsLO(data_tbl, fund_name, report_date)"},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsLO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SeparateFundsLO — SeparateFundsLO","text":"data_tbl data frame tibble containing fund data. include columns fund_name, date, weight, sector. fund_name character vector specifying names funds include analysis. report_date date value specifying report date filtering data.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SeparateFundsLO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SeparateFundsLO — SeparateFundsLO","text":"data frame columns date, sector, sum weight sector specified date. result grouped date sector.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SetupMicrosoft365Auth.html","id":null,"dir":"Reference","previous_headings":"","what":"SetupMicrosoft365Auth — SetupMicrosoft365Auth","title":"SetupMicrosoft365Auth — SetupMicrosoft365Auth","text":"SetupMicrosoft365Auth function initializes creates authentication token interacting Microsoft 365 products. token essential using functionality accessing user information within Microsoft 365. Note: SetupMicrosoft365Auth run first time, prompts authorization via Authenticator app.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SetupMicrosoft365Auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SetupMicrosoft365Auth — SetupMicrosoft365Auth","text":"","code":"SetupMicrosoft365Auth(   tenant = \"fairtree.com\",   app_id = \"d44a05d5-c6a5-4bbb-82d2-443123722380\" )"},{"path":"https://menzy17.github.io/Fairlytics/reference/SetupMicrosoft365Auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SetupMicrosoft365Auth — SetupMicrosoft365Auth","text":"tenant string specifying Azure AD tenant name ID. app_id string specifying client ID (application ID) registered Azure AD app.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/SetupMicrosoft365Auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SetupMicrosoft365Auth — SetupMicrosoft365Auth","text":"Microsoft 365 authentication token object.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRItoTRR.html","id":null,"dir":"Reference","previous_headings":"","what":"TRItoTRR — TRItoTRR","title":"TRItoTRR — TRItoTRR","text":"function takes TRI object convert Index values Returns","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRItoTRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TRItoTRR — TRItoTRR","text":"","code":"TRItoTRR(dfTRI)"},{"path":"https://menzy17.github.io/Fairlytics/reference/TRItoTRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TRItoTRR — TRItoTRR","text":"dfTRI TRI dataframe long format (columns: date, Ticker, TR_Index)","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRItoTRR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TRItoTRR — TRItoTRR","text":"TRR datafarme","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRRtoTRI.html","id":null,"dir":"Reference","previous_headings":"","what":"TRRtoTRI — TRRtoTRI","title":"TRRtoTRI — TRRtoTRI","text":"Converts TRR dataframe TRI dataframe, starting index 1","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRRtoTRI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TRRtoTRI — TRRtoTRI","text":"","code":"TRRtoTRI(dfTRR, FocusAt = \"Start\")"},{"path":"https://menzy17.github.io/Fairlytics/reference/TRRtoTRI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TRRtoTRI — TRRtoTRI","text":"dfTRR TRR dataframe (columns: date, Ticker, TR_Index) FocusAt character string. index 1 set 'Start' 'End' , Default: 'Start'","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/TRRtoTRI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TRRtoTRI — TRRtoTRI","text":"TRI dataframe","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/WindowPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"WindowPanel — WindowPanel","title":"WindowPanel — WindowPanel","text":"Wraps multiple collapsible sections draggable, scrollable panel displaying interactive content.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/WindowPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WindowPanel — WindowPanel","text":"","code":"WindowPanel(panel_layers, title)"},{"path":"https://menzy17.github.io/Fairlytics/reference/WindowPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WindowPanel — WindowPanel","text":"panel_layers (HTML widget) list HTML elements representing individual panel sections. title (string) title window panel, displayed top.","code":""},{"path":"https://menzy17.github.io/Fairlytics/reference/WindowPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WindowPanel — WindowPanel","text":"HTML element containing draggable, scrollable window panel.","code":""}]
